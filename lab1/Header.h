#pragma once

class Fraction

{

public:

	// Конструктор

	Fraction() {};

	// Деструктор

	~Fraction() {};

	// Конструктор присваивания числителя и знаменателя, проверка знаменателя на равенство нулю

	// В переменную а присваивается числитель, в переменную b - знаменатель, но только если он не равен нулю

	Fraction(int chislit, int znamenat)

	{

		a = chislit;

		if (znamenat) // Если знаменатель равен нулю, то мы предупреждаем о неправильном вводе данных

			b = znamenat;

		else

		{

			cout << "Не могу поделить на ноль" << endl;

			system("pause>nul");

			exit(1);

		}

	}

	// Сложение

	Fraction Add(Fraction& s)

	{

		Fraction Sum;

		// Приводим обе дроби к общему знаменателю

		Sum.a = a * s.b + b * s.a;

		Sum.b = b * s.b;

		// Возвращаем новую дробь, являющейся суммой первой и второй дроби

		return Sum;

	}

	// Умножение

	Fraction Mult(Fraction& s)

	{

		Fraction Mult;

		// Числитель конечной дроби равен произведению числителя первой и второй дроби

		Mult.a = a * s.a;

		// Знаменатель конечной дроби равен произведению знаменателя первой и второй дроби

		Mult.b = b * s.b;

		// Возвращаем новую дробь, являющейся произведением первой и второй дроби

		return Mult;

	}

	// Деление

	Fraction Div(Fraction& s)

	{

		Fraction Div;

		// Числитель конечной дроби равен произведению числителя первой дроби и знаменателя второй

		Div.a = a * s.b;

		// Знаменатель конечной дроби равен произведению числителя второй дроби и числителя второй

		Div.b = b * s.a;

		// Проверка на то что числитель второй дроби не равен 0

		if (s.a == 0)

		{

			cout << "Не могу поделить на ноль" << endl;

			system("pause>nul");

			exit(1);

		}

		// Возвращаем дробь поделенную на другую

		return Div;

	}

	// Сокращение

	Fraction Reduction()

	{

		Fraction Red;

		Red.a = a;

		Red.b = b;

		// Ищем общий делитель для числителя и знаменателя, чтобы сократить дробь

		for (int i = 1; i <= a && i <= b; i++)

		{

			int aa = a % i;

			int bb = b % i;

			if (!(a % i) && !(b % i))

			{

				Red.a = a / i;

				Red.b = b / i;

			}

		}

		// Возвращаем сокращённую дробь

		return Red;

	}

	// Сравнение

	void Comparison(Fraction& s)

	{

		Fraction d1, d2;

		// Приводим обе дроби к общему знаменателю

		d1.a = a * s.b;

		d1.b = b * s.b;

		d2.a = s.a * b;

		d2.b = s.b * b;

		// Сравниваем числителя после приведения к общему знаменателю

		if (d1.a > d2.a)

			cout << "дробь " << a << "/" << b << " больше , чем дробь " << s.a << "/" << s.b;

		if (d1.a < d2.a)

			cout << "дробь " << a << "/" << b << " меньше, чем дробь " << s.a << "/" << s.b;

		if (d1.a == d2.a)

			cout << "дробь " << a << "/" << b << " равна " << s.a << "/" << s.b;

	}

	// Вывод на экран

	void Print()

	{

		cout << a << "/" << b << endl;

	}

	// Инициализация дроби(изменение) - числителя и знаменателя 

	void Initialization(int a, int b)

	{

		this->a = a;

		this->b = b;

	}

private:

	int a, b; // a-числитель b-знаменатель

};